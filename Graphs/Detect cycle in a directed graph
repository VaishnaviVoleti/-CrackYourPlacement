class Solution {
    private:
    bool DFS(int node,int par,vector<int> adj[],vector<int> &vis,vector<int> &path){
        vis[node] = 1;
        path[node] = 1;
        for(auto it:adj[node]){
            if(!vis[it]){
                if(DFS(it,node,adj,vis,path))
                    return true;}
            if(path[it])
             return true;
            
        }
        path[node] = 0;
        return false;
    }
  public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        vector<int>vis(V,0);
        vector<int>path(V);
        for(int i=0;i<V;i++){
            if(!vis[i] ){
                if(DFS(i,-1,adj,vis,path)){
                    return true;
            }
        }
    }
        return false;
    }
};
