class Solution {
private:
    bool DFS(vector<int> adj[],int node,int par,vector<int>&vis){
        vis[node] = 1;
        for(auto it:adj[node]){
            if(!vis[it]){
                if(DFS(adj,it,node,vis))
                    return true;
            }
            else if(it!=par)
                return true;
        }
        return false;
    }
  public:
    // Function to detect cycle in an undirected graph.
    bool isCycle(int V, vector<int> adj[]) {
        // Code here
        vector<int>vis(V,0);
        for(int i=0;i<V;i++){
            if(!vis[i])
                if(DFS(adj,i,-1,vis))
                    return true;
        }
        return false;
    }
};
